<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BreakdownCsMapper">
    <!-- マッピング（SELECT文用resultMap） -->
    <resultMap id="breakdownCsResult" type="com.example.demo.entity.BreakdownCs">
        <id column="bcs_bcd_id" property="bcsBcdId" />
        <id column="bcs_cs_id" property="bcsCsId" />
        <result column="bcs_data_text" property="bcsDataText" />
        <result column="bcs_data_bigint" property="bcsDataBigint" />
        <result column="sum_bcs_price" property="sumBcsPrice" />
        <result column="unit_price_per_square_meter" property="unitPricePerSquareMeter" />
        <result column="bcs_created_at" property="bcsCreatedAt" />
        <result column="bcs_updated_at" property="bcsUpdatedAt" />
        <result column="bcs_latest_editor" property="bcsLatestEditor" />
        <result column="bcs_delete_flg" property="bcsDeleteFlg" />
        <association property="employee" javaType="com.example.demo.entity.Employee">
            <id column="code" property="code" />
            <result column="first_name" property="firstName" />
            <result column="last_name" property="lastName" />
        </association>
        <association property="categorySubject" javaType="com.example.demo.entity.CategorySubject">
            <id column="cs_id" property="csId" />
            <result column="cs_type_name" property="csTypeName" />
        </association>
        <association property="breakdownCd" javaType="com.example.demo.entity.BreakdownCd">
            <id column="bcd_id" property="bcdId" />
            <result column="bcd_area_totalfloor" property="bcdAreaTotalfloor" />
            <result column="bcd_area_renovation" property="bcdAreaRenovation" />
            <result column="bcd_area_exterior" property="bcdAreaExterior" />
        </association>
        <association property="breakdownCo" javaType="com.example.demo.entity.BreakdownCo">
            <id column="bco_id" property="bcoId" />
            <result column="bco_cc_id" property="bcoCcId" />
            <result column="bco_co_id" property="bcoCoId" />
        </association>
        <association property="categoryDetail" javaType="com.example.demo.entity.CategoryDetail">
            <id column="cd_id" property="cdId" />
            <result column="cd_type_name" property="cdTypeName" />
        </association>
        <association property="categoryOutline" javaType="com.example.demo.entity.CategoryOutline">
            <id column="co_id" property="coId" />
            <result column="co_type_name" property="coTypeName" />
        </association>
        <association property="constructionContract" javaType="com.example.demo.entity.ConstructionContract">
            <id column="cc_id" property="ccId" />
            <result column="project_name" property="projectName" />
        </association>
    </resultMap>
    <!-- 合計取得 -->
    <select id="selectSumById" resultMap="breakdownCsResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT SUM(bcs_data_bigint) AS sum_bcs_price
        FROM breakdown_cs
        WHERE bcs_delete_flg = 0 AND bcs_bcd_id = #{bcsBcdId};
    </select>
    <!-- 特定取得 -->
    <select id="selectAllById" resultMap="breakdownCsResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT bcs_bcd_id, bcs_cs_id, bcs_data_text, bcs_data_bigint,
            category_subject.cs_type_name,
            CASE
                WHEN <![CDATA[breakdown_cd.bcd_area_totalfloor <> 0]]>
                    THEN CONCAT(FORMAT(ROUND(bcs_data_bigint / breakdown_cd.bcd_area_totalfloor, 0), 0), '円/延床㎡')
                WHEN <![CDATA[breakdown_cd.bcd_area_renovation <> 0]]>
                    THEN CONCAT(FORMAT(ROUND(bcs_data_bigint / breakdown_cd.bcd_area_renovation, 0), 0), '円/改修㎡')
                WHEN <![CDATA[breakdown_cd.bcd_area_exterior <> 0]]>
                    THEN CONCAT(FORMAT(ROUND(bcs_data_bigint / breakdown_cd.bcd_area_exterior, 0), 0), '円/外構㎡')
                ELSE '-'
            END AS unit_price_per_square_meter
        FROM breakdown_cs
        JOIN category_subject ON breakdown_cs.bcs_cs_id = category_subject.cs_id
        JOIN breakdown_cd ON breakdown_cs.bcs_bcd_id = breakdown_cd.bcd_id
        WHERE bcs_delete_flg = 0 AND bcs_bcd_id = #{bcsBcdId}
        ORDER BY bcs_cs_id;
    </select>
    <!-- 一件取得 -->
    <select id="selectById" resultMap="breakdownCsResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT *
        FROM breakdown_cs
        JOIN employee ON breakdown_cs.bcs_latest_editor = employee.code
        JOIN category_subject ON breakdown_cs.bcs_cs_id = category_subject.cs_id
        JOIN breakdown_cd ON breakdown_cs.bcs_bcd_id = breakdown_cd.bcd_id
        JOIN breakdown_co ON breakdown_cd.bcd_bco_id = breakdown_co.bco_id
        JOIN category_detail ON breakdown_cd.bcd_cd_id = category_detail.cd_id
        JOIN category_outline ON breakdown_co.bco_co_id = category_outline.co_id
        JOIN construction_contract ON breakdown_co.bco_cc_id = construction_contract.cc_id
        WHERE bcs_delete_flg = 0 AND bcs_bcd_id = #{bcsBcdId} AND bcs_cs_id = #{bcsCsId};
    </select>
    <!-- 登録実行 -->
    <insert id="insert" parameterType="com.example.demo.entity.BreakdownCs">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        INSERT INTO breakdown_cs (bcs_bcd_id, bcs_cs_id,
            bcs_data_text, bcs_data_bigint,
            bcs_created_at, bcs_updated_at, bcs_latest_editor, bcs_delete_flg)
        VALUES (#{bcsBcdId}, #{bcsCsId},
            #{bcsDataText}, #{bcsDataBigint},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{bcsLatestEditor}, 0);
    </insert>
    <!-- 更新実行 -->
    <update id="update" parameterType="com.example.demo.entity.BreakdownCs">
        UPDATE breakdown_cs
        SET bcs_bcd_id = #{bcsBcdId}, bcs_cs_id = #{bcsBcdId},
            bcs_data_text = #{bcsDataText}, bcs_data_bigint = #{bcsDataBigint},
            bcs_created_at = CURRENT_TIMESTAMP, bcs_latest_editor = #{bcsLatestEditor}
        WHERE bcs_bcd_id = #{bcsBcdId} AND bcs_cs_id = #{bcsCsId};
    </update>
    <!-- 削除実行 -->
    <delete id="delete" parameterType="Integer">
        <!-- 物理削除　↓　※物理削除ではリレーションがある場合に削除エラーが発生するため論理削除へ変更
        DELETE FROM breakdown_cs WHERE bcs_bcd_id = #{bcsBcdId} AND bcs_cs_id = #{bcsCsId}; -->
        <!-- 論理削除　↓ ※全件取得、登録実行、更新実行の各SQLに「delete_flg」を追記 -->
        UPDATE breakdown_cs
        SET bcs_delete_flg = 1
        WHERE bcs_bcd_id = #{bcsBcdId} AND bcs_cs_id = #{bcsCsId};
    </delete>
</mapper>