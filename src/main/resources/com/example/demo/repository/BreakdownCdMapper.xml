<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.BreakdownCdMapper">
    <!-- マッピング（SELECT文用resultMap） -->
    <resultMap id="BreakdownCdResult" type="com.example.demo.entity.BreakdownCd">
        <id column="bcd_id" property="bcdId" />
        <result column="bcd_bco_id" property="bcdBcoId" />
        <result column="bcd_cd_id" property="bcdCdId" />
        <result column="bcd_po_id" property="bcdPoId" />
        <result column="bcd_pd_id" property="bcdPdId" />
        <result column="bcd_order" property="bcdOrder" />
        <result column="bcd_type_name" property="bcdTypeName" />
        <result column="bcd_price" property="bcdPrice" />
        <result column="sum_bcd_price" property="sumBcdPrice" />
        <result column="unit_price_per_square_meter" property="unitPricePerSquareMeter" />
        <result column="bcd_area_building" property="bcdAreaBuilding" />
        <result column="bcd_area_totalfloor" property="bcdAreaTotalfloor" />
        <result column="bcd_area_renovation" property="bcdAreaRenovation" />
        <result column="bcd_area_exterior" property="bcdAreaExterior" />
        <result column="bcd_created_at" property="bcdCreatedAt" />
        <result column="bcd_updated_at" property="bcdUpdatedAt" />
        <result column="bcd_latest_editor" property="bcdLatestEditor" />
        <result column="bcd_delete_flg" property="bcdDeleteFlg" />
        <association property="constructionContract" javaType="com.example.demo.entity.ConstructionContract">
            <id column="cc_id" property="ccId" />
            <result column="project_name" property="projectName" />
        </association>
        <association property="categoryOutline" javaType="com.example.demo.entity.CategoryOutline">
            <id column="co_id" property="coId" />
            <result column="co_type_name" property="coTypeName" />
        </association>
        <association property="breakdownCo" javaType="com.example.demo.entity.BreakdownCo">
            <id column="bco_id" property="bcoId" />
            <result column="bco_cc_id" property="bcoCcId" />
            <result column="bco_co_id" property="bcoCoId" />
            <result column="bco_price" property="bcoPrice" />
        </association>
        <association property="categoryDetail" javaType="com.example.demo.entity.CategoryDetail">
            <id column="cd_id" property="cdId" />
            <result column="cd_type_name" property="cdTypeName" />
        </association>
        <association property="purposeOutline" javaType="com.example.demo.entity.PurposeOutline">
            <id column="po_id" property="poId" />
            <result column="po_type_name" property="poTypeName" />
        </association>
        <association property="purposeDetail" javaType="com.example.demo.entity.PurposeDetail">
            <id column="pd_id" property="pdId" />
            <result column="pd_type_name" property="pdTypeName" />
            <result column="pd_included_type" property="pdIncludedType" />
        </association>
        <association property="employee" javaType="com.example.demo.entity.Employee">
            <id column="code" property="code" />
            <result column="first_name" property="firstName" />
            <result column="last_name" property="lastName" />
        </association>
    </resultMap>
    <!-- 合計取得 -->
    <select id="selectSumById" resultMap="BreakdownCdResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT SUM(bcd_price) AS sum_bcd_price
        FROM breakdown_cd
        WHERE bcd_delete_flg = 0 AND bcd_bco_id = #{bcdBcoId};
    </select>
    <!-- 特定取得 -->
    <select id="selectAllById" resultMap="BreakdownCdResult">
        <!-- 論理削除採用のため「WHERE delete_flg = 0」を追記 -->
        SELECT bcd_id, bcd_bco_id, bcd_order, bcd_type_name, bcd_price,
        construction_contract.cc_id, construction_contract.project_name,
        category_outline.co_id, category_outline.co_type_name,
        CASE
            WHEN <![CDATA[bcd_area_totalfloor <> 0]]>
                THEN CONCAT(FORMAT(ROUND(bcd_price / bcd_area_totalfloor, 0), 0), '円/延床㎡')
            WHEN <![CDATA[bcd_area_renovation <> 0]]>
                THEN CONCAT(FORMAT(ROUND(bcd_price / bcd_area_renovation, 0), 0), '円/改修㎡')
            WHEN <![CDATA[bcd_area_exterior <> 0]]>
                THEN CONCAT(FORMAT(ROUND(bcd_price / bcd_area_exterior, 0), 0), '円/外構㎡')
            ELSE '-'
        END AS unit_price_per_square_meter
        FROM breakdown_cd
        JOIN breakdown_co ON breakdown_cd.bcd_bco_id = breakdown_co.bco_id
        JOIN category_outline ON breakdown_co.bco_co_id = category_outline.co_id
        JOIN construction_contract ON breakdown_co.bco_cc_id = construction_contract.cc_id
        WHERE bcd_delete_flg = 0 AND bcd_bco_id = #{bcdBcoId}
        ORDER BY bcd_order;
    </select>
    <!-- 一件取得 -->
    <select id="selectById" resultMap="BreakdownCdResult">
        SELECT *
        FROM breakdown_cd
        JOIN breakdown_co ON breakdown_cd.bcd_bco_id = breakdown_co.bco_id
        JOIN category_detail ON breakdown_cd.bcd_cd_id = category_detail.cd_id
        JOIN purpose_outline ON breakdown_cd.bcd_po_id = purpose_outline.po_id
        JOIN purpose_detail ON breakdown_cd.bcd_pd_id = purpose_detail.pd_id
        JOIN employee ON breakdown_cd.bcd_latest_editor = employee.code
        JOIN category_outline ON breakdown_co.bco_co_id = category_outline.co_id
        JOIN construction_contract ON breakdown_co.bco_cc_id = construction_contract.cc_id
        WHERE bcd_id = #{bcdId} AND bcd_bco_id = #{bcdBcoId};
    </select>
    <!-- 登録実行 -->
    <insert id="insert" parameterType="com.example.demo.entity.BreakdownCd">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        INSERT INTO breakdown_cd (bcd_bco_id, bcd_cd_id, bcd_po_id, bcd_pd_id,
        bcd_order, bcd_type_name, bcd_price,
        bcd_area_building, bcd_area_totalfloor,
        bcd_area_renovation, bcd_area_exterior,
        bcd_created_at, bcd_updated_at, bcd_latest_editor, bcd_delete_flg)
        VALUES (#{bcdBcoId}, #{bcdCdId}, #{bcdPoId}, #{bcdPdId},
        #{bcdOrder}, #{bcdTypeName}, #{bcdPrice},
        #{bcdAreaBuilding}, #{bcdAreaTotalfloor},
        #{bcdAreaRenovation}, #{bcdAreaExterior},
        CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, #{bcdLatestEditor}, 0);
    </insert>
    <!-- 更新実行 -->
    <update id="update" parameterType="com.example.demo.entity.BreakdownCd">
        <!-- 論理削除採用のため「delete_flg」と値「0」を追記 -->
        UPDATE breakdown_cd SET bcd_bco_id = #{bcdBcoId}, bcd_cd_id = #{bcdCdId},
        bcd_po_id = #{bcdPoId}, bcd_pd_id = #{bcdPdId},
        bcd_order = #{bcdOrder}, bcd_type_name = #{bcdTypeName}, bcd_price = #{bcdPrice},
        bcd_area_building = #{bcdAreaBuilding}, bcd_area_totalfloor = #{bcdAreaTotalfloor},
        bcd_area_renovation = #{bcdAreaRenovation}, bcd_area_exterior = #{bcdAreaExterior},
        bcd_updated_at = CURRENT_TIMESTAMP,
        bcd_latest_editor = #{bcdLatestEditor}, bcd_delete_flg = 0
        WHERE bcd_id = #{bcdId};
    </update>
    <!-- 削除実行 -->
    <delete id="delete" parameterType="Integer">
        <!-- 物理削除　↓　※物理削除ではリレーションがある場合に削除エラーが発生するため論理削除へ変更
        DELETE FROM breakdown_cd WHERE bcd_id = #{bcdId}; -->
        <!-- 論理削除　↓ ※全件取得、登録実行、更新実行の各SQLに「delete_flg」を追記 -->
        UPDATE breakdown_cd SET bcd_delete_flg = 1
        WHERE bcd_id = #{bcdId};
    </delete>
</mapper>